pipeline:
    name: loans-application
    identifier: loansapplication
    allowStageExecutions: false
    projectIdentifier: trainingcinikp1
    orgIdentifier: default
    tags: {}
    properties:
        ci:
            codebase:
                connectorRef: nikpapcsgit
                repoName: loans-application
                build: <+input>
    stages:
        - stage:
              name: ASPNET-Build
              identifier: ASPNETBuild
              type: CI
              spec:
                  cloneCodebase: true
                  infrastructure:
                      type: VM
                      spec:
                          type: Pool
                          spec:
                              identifier: windows
                  execution:
                      steps:
                          - step:
                                type: Run
                                name: XUnitTests
                                identifier: XUnitTests
                                spec:
                                    command: |
                                        cd LoanAPI
                                        dotnet test "C:\harness\LoanAPI\XUnitTestProject\bin\Debug\net5.0\XUnitTestProject.dll" --logger:"junit;LogFileName=test-results.xml"
                                    reports:
                                        type: JUnit
                                        spec:
                                            paths:
                                                - "**/*.xml"
                                    shell: Powershell
                          - step:
                                type: Run
                                name: Build-Package
                                identifier: BuildPackage
                                spec:
                                    command: |
                                        

                                        # Build
                                        $serviceName = $env:serviceName
                                        $releaseNo = $env:releaseNo
                                        $packageFolder = "C:\harness"
                                        $packageName = "$serviceName-$releaseNo.zip"

                                        # Add new binaries to PATH
                                        $env:PATH += ';C:\Users\Administrator\MSBuild\MSBuild\Current\Bin;;C:\Users\Administrator\AppData\Local\Microsoft\dotnet'

                                        # Go to the project folder
                                        cd LoanAPI

                                        # Run MSBuild
                                        dotnet build -p:Configuration=Release -p:DeployOnBuild=true -p:PublishProfile=FolderProfile -p:WebPublishMethod=Package -p:PackageAsSingleFile=true -p:Version=1.2.3.4 --output "$packageFolder\$packageName"


                                        Compress-Archive $packageFolder\$packageName* $packageFolder\$packageName.zip
                                        $env:packageName = "$packageFolder\$packageName.zip"
                                    envVariables:
                                        serviceName: <+pipeline.name>
                                        releaseNo: <+pipeline.sequenceId>
                                    shell: Powershell
